'''
Этот урок посвящен построению графиков с помощью Python.
Если вам нужно нарисовать всего один график для ваших данных, то самым простым решением может оказаться вывод 
результатов вашей программы с разделением отдельных значений в строке с помощью табуляции (символа \t), их 
копирование в Excel или его аналог и построение графика.
Однако, в случае если вам нужно строить очень много графиков, то такой способ не годится и нужно научиться 
строить их непосредственно с помощью Python. Одной из самых популярных библиотек для построения графиков является 
matplotlib, возможности которой во многом даже превосходят возможности редакторов электронных таблиц.
Большинство нужных нам функций находятся в matplotlib.pyplot
Посмотрим на простой пример, который сохраняет в файл sin.png график функции sin(x) на отрезке от 0 до 10:
import matplotlib.pyplot as plt # подключаем библиотеку с коротким названием, чтобы не писать каждый раз 
много букв
import math
fig = plt.figure() # создаем график
plt.axis([0, 10, -1.5, 1.5]) # на оси x будет изображаться участок от 0 до 10, а на оси y от -1.5 до 1.5
plt.xlabel('x') # подпись оси x
plt.ylabel('sin(x)') # подпись оси y
xs = [] # здесь будут параметры функции (x координаты изображаемых точек)
sin_vals = [] # здесь будут значения функции (y координаты изображаемых точек)
x = 0.0
while x < 10.0: # заполняем списки
    sin_vals.append(math.sin(x))
    xs.append(x)
    x += 0.01
plt.plot(xs, sin_vals) # создаем график: первый аргумент - список x-координат, второй - соответствующие y-координаты
fig.savefig('sin.png') # сохраняем график в файл
В результате выполнения получится такой график:
Можно заметить, что последовательные точки в нем соединяются линиями - это стиль по умолчанию.
Если вы хотите, чтобы график не сохранялся в файл, а показывался в отдельном, то вместо последней строки нужно 
написать plt.show(). Естественно, с этим могут возникнуть проблемы, если вы работаете на удаленном терминале, 
так что способ с сохранением в файл более универсальный, но для быстрой отладки такой быстрый показ графика 
достаточно полезен.
В следующем задании мы проверим, удалось ли вам установить matplotlib, а затем перейдем к нашему обычному 
процессу совместного гугления для решения возникающих перед нами задач.
'''
# Подключаем библиотеку с коротким названием, чтобы не писать каждый раз много букв.
import matplotlib.pyplot as plt
import math

# Создаем график.
fig = plt.figure()

# На оси x будет изображаться участок от 0 до 10, а на оси y от -1.5 до 1.5
plt.axis([0, 10, -1.5, 1.5])

# Подпись оси x.
plt.xlabel('x')
# Подпись оси y.
plt.ylabel('sin(x)')

# Здесь будут параметры функции (x координаты изображаемых точек).
xs = []
# Здесь будут значения функции (y координаты изображаемых точек).
sin_vals = []

x = 0.0
# Заполняем списки.
while x < 10.0:
    sin_vals.append(math.sin(x))
    xs.append(x)
    x += 0.01

# Cоздаем график: первый аргумент - список x-координат, второй - соответствующие y-координаты.
plt.plot(xs, sin_vals)

# Cохраняем график в файл.
fig.savefig('A:\\task\\sin.png')

# Выводим график на экран(сохранение не обязательно).
plt.show()
