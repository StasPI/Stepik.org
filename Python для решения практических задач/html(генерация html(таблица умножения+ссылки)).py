'''
В этой задаче вам предстоит научиться создавать ссылки. Вам нужно сгенерировать html-код на питоне и сдать на 
проверку html-файл, в котором будет таблица размером 10 на 10, которая должна содержать таблицу умножения для 
чисел от 1 до 10. Каждое число в таблице должно быть ссылкой на страницу http://<это число>.ru. Например, число 
12 должно быть ссылкой на страницу http://12.ru
При открытии вашего файла в браузере это должно выглядеть примерно так:
Ваш файл должен начинаться с тегов <html> и <body> и заканчиваться </body> и </html>.
Для создания таблицы можно пользоваться тегами <table> (создание таблицы), <tr> (создание строки в таблице) и 
<td> (создание отдельной ячейки). Все открытые теги нужно закрыть, причем сделать это нужно в правильном порядке.
Для создания ссылки пользуйтесь тегом <a>. Например, ссылка на страницу http://hse.ru с текстом "Высшая школа 
экономики" должна выглядеть так: <a href=http://hse.ru>Высшая школа экономики</a>.
Пожалуйста, не используйте никаких украшений и других тегов - мы не сможем проверить такие решения.
'''


from xml.etree import ElementTree as ET

number = int(input("Введите число:"))

# Создать тег хтмл
html = ET.Element('html')
# Создать тег боди
body = ET.Element('body')
# Помещаю в хтмл тег боди
html.append(body)
# Создаю тег тейбл
table = ET.Element('table')
# Помещаю в боди тэг тейбл
body.append(table)
# Создаю массив он же таблица умножения
multiplication_table = [
    [i * j for i in range(1, number+1)] for j in range(1, number+1)]
# запускаю итерацию по массиву
for line in multiplication_table:
    # Создаю тег тр
    tr = ET.Element('tr')
    # Помещаю в тейбл тэг тр
    table.append(tr)
    # Запускаю итерацию по списку то есть по элементам строки
    for element in line:
        # Создаю тег тд
        td = ET.Element('td')
        # Помещаю в тр тэг тд
        tr.append(td)
        # Переменная она же зачение для агрумента то есть ссылка
        arg = 'http://'+str(element)+'.ru'
        # Создаю тэг а и выдаю ему агрумен хрев и значение арг то есть ссылку
        a = ET.Element('a', href=arg)
        # Добавляю в значение тега А следующий текст(контент)
        a.text = str(element)
        # Помещаю в тд тег а
        td.append(a)
# В формате хтмл записываю код(вместо адреса можно написать sys.stdout). Устанавливаю выходную кодировку.
# Метод соответственно хтмл или хмл или текс, смотря что хотим получить на выходе.
ET.ElementTree(html).write('A:\\task\\new.html',
                           encoding='unicode', method='html')
